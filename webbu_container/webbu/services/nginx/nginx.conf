upstream webbu {
    # web is defined in docker-compose as the flask server
    server web:7002;
}

server {

    listen 80;
    server_name webbu.app www.webbu.app blog.webbu.app;

    # https certbot challenge file (might have to remove https 301 redirection when renewing?)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # location / {
    #     proxy_pass http://webbu;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header Host $host;
    #     proxy_redirect off;
    # }

    # redirect http to https so default webbu.app is labeled secure
    # comment this out when creating a certificate
    return 301 https://$host$request_uri;

}

# For HTTPS with certbot (certbot runs in another container)
# tutorial: https://medium.com/@pentacent/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71
# to make nginx run locally with HTTPS we will need a self-signed certificate on the local machine
server {
    listen 443 ssl;
    server_name webbu.app www.webbu.app blog.webbu.app;

    # note that webbu.app has the .app not just the name
    ssl_certificate /etc/letsencrypt/live/webbu.app/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/webbu.app/privkey.pem;


    # nginx (not flask) should deliver static content
    # security: make sure to end location path with a / (https://github.com/yandex/gixy/blob/master/docs/en/plugins/aliastraversal.md)
    location /static/ {
       alias /usr/src/app/web/pyproject/static/;
    }
    location /robots.txt {
        alias /usr/src/app/web/pyproject/static/robots.txt;
    }
    location /sitemap.xml {
        alias /usr/src/app/web/pyproject/static/sitemap.xml;
    }
    location /favicon.ico {
        alias /usr/src/app/web/pyproject/static/imgs/favicon.ico;
    }
    # previous owner of my ip had this path and the bots keep trying to access it
    location /public-projects/ {
        deny all;
        return 404;
    }
    location / {
        proxy_pass http://webbu;

        # these are useful so that flask has visibility of the real user's ip that nginx got (not the docker container one)
        # apparently X-Forwarded-For is a list of all proxies the req passed through and X-Real-IP is the last one
        proxy_set_header        Host            $host;
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    # needs to be here too, so that it works when renewing certificates (https already on)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # The folks at Letâ€™s Encrypt maintain best-practice HTTPS configurations for nginx
    # This includes those practices and will score you a straight A in the SSL Labs test
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

}
